openapi: 3.0.3
info:
  title: Reward Points API
  description: API for managing customer reward points and transactions
  version: 1.0.0
paths:
  /reward-points:
    get:
      summary: Retrieve all customer reward points
      responses:
        '200':
          description: A list of customer reward points
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerRewardPoints'
        '500':
          description: Internal server error
   
  /reward-points/{customerId}:
    get:
      summary: Retrieve customer reward points by customer ID
      parameters:
        - name: customerId
          in: path
          required: true
          description: ID of the customer
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 7
      responses:
        '200':
          description: A list of customer reward points
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerRewardPoints'
        '404':
          description: Customer reward points not found
        '500':
          description: Internal server error
  /transactions:
    post:
      summary: Save transaction and reward points
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequestDTO'
      responses:
        '201':
          description: Transaction and reward points saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponseDTO'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /transactions/{id}:
    delete:
      summary: Delete transaction by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transaction to delete
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found
        '500':
          description: Internal server error
    put:
      summary: Update transaction by ID
      parameters:
        - name: transactionId
          in: path
          required: true
          description: ID of the transaction to update
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Transaction updated successfully
        '404':
          description: Transaction not found
        '500':
          description: Internal server error
  /saveCustData:
    post:
      summary: Save multiple customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerDTO'
      responses:
        '201':
          description: Customers saved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request
        '500':
          description: Internal server error
components:
  schemas:
    CustomerRewardPoints:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        points:
          type: integer
    TransactionRequestDTO:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        transactionDate:
          type: string
          format: date
        amount:
          type: number
        description:
          type: string
    TransactionResponseDTO:
      type: object
      properties:
        transactionId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        amount:
          type: number
        pointsEarned:
          type: integer
    Transaction:
      type: object
      properties:
        transactionId:
          type: integer
          format: int32
        customer:
          $ref: '#/components/schemas/Customer'
        transactionDate:
          type: string
          format: date
        amount:
          type: number
        description:
          type: string
    CustomerDTO:
      type: object
      properties:
        customerName:
          type: string
        email:
          type: string
    Customer:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        customerName:
          type: string
        email:
          type: string
